// Script pour convertir tous les fichiers de donn√©es du format ES6 vers window.data
const fs = require('fs');
const path = require('path');

const dataDir = 'c:/Users/I051377/OneDrive - SAP SE/Documents/Scripts/Revision/v2/src/data/mathematiques/6ieme';

// Fichiers √† convertir (exclure les fichiers utilitaires)
const filesToConvert = [
    'division.js',
    'fractions.js',
    'aires-figures.js',
    'multiplication.js',
    'nombres-entiers.js',
    'figures-planes.js',
    'geometrie-avancee.js',
    'algebre.js',
    'perimetre.js',
    'pourcentages.js',
    'proportionnalite.js',
    'moyenne.js'
];

console.log('üîÑ Conversion des fichiers vers le format window.data...');

filesToConvert.forEach(fileName => {
    const filePath = path.join(dataDir, fileName);
    
    if (!fs.existsSync(filePath)) {
        console.log(`‚ö†Ô∏è  ${fileName} n'existe pas, ignor√©`);
        return;
    }
    
    try {
        let content = fs.readFileSync(filePath, 'utf8');
        
        // D√©tection du nom de la variable export√©e
        const exportMatch = content.match(/export const (\w+) = \{/);
        if (!exportMatch) {
            console.log(`‚ö†Ô∏è  ${fileName}: Pas de format export const d√©tect√©`);
            return;
        }
        
        const variableName = exportMatch[1];
        console.log(`üîç ${fileName}: Variable d√©tect√©e: ${variableName}`);
        
        // Transformation du contenu
        
        // 1. Remplacer "export const variableName = {" par "const data = {"
        content = content.replace(/export const \w+ = \{/, 'const data = {');
        
        // 2. Supprimer les lignes export √† la fin
        content = content.replace(/\/\/ Export par d√©faut.*\n/g, '');
        content = content.replace(/export default \w+;.*\n?/g, '');
        content = content.replace(/export \{ \w+ \};.*\n?/g, '');
        content = content.replace(/export const \w+ = \w+;.*\n?/g, '');
        
        // 3. Nettoyer les accents dans les commentaires
        content = content.replace(/√©/g, 'e');
        content = content.replace(/√®/g, 'e');
        content = content.replace(/√†/g, 'a');
        content = content.replace(/√π/g, 'u');
        content = content.replace(/√¥/g, 'o');
        content = content.replace(/√™/g, 'e');
        content = content.replace(/√ß/g, 'c');
        content = content.replace(/√Æ/g, 'i');
        content = content.replace(/√Ø/g, 'i');
        content = content.replace(/√â/g, 'E');
        content = content.replace(/√à/g, 'E');
        content = content.replace(/√Ä/g, 'A');
        
        // 4. Ajouter l'assignment √† window.data √† la fin
        if (!content.includes('window.data')) {
            // S'assurer qu'on a une ligne vide avant l'assignment
            content = content.trim();
            content += '\n\n// Assign to window for browser compatibility\nwindow.data = data;\n';
        }
        
        // √âcrire le fichier modifi√©
        fs.writeFileSync(filePath, content, 'utf8');
        console.log(`‚úÖ ${fileName}: Converti avec succ√®s`);
        
    } catch (error) {
        console.error(`‚ùå ${fileName}: Erreur lors de la conversion:`, error.message);
    }
});

console.log('\nüéâ Conversion termin√©e !');
console.log('üìù Tous les fichiers utilisent maintenant le format window.data');

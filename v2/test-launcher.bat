@echo off
REM ============================================================================
REM    LAUNCHER UNIFI√â FUNREVIS V2 - TOUS LES TESTS
REM ============================================================================
REM 
REM Ce script lance les deux types de tests :
REM 1. Tests automatis√©s (test-reports/)
REM 2. Tests de d√©veloppement (v2/src/)
REM
REM Usage: 
REM   test-launcher.bat                    - Menu interactif
REM   test-launcher.bat auto               - Tests automatis√©s seulement  
REM   test-launcher.bat dev                - Tests d√©veloppement seulement
REM   test-launcher.bat all                - Tous les tests
REM ============================================================================

setlocal

echo.
echo ============================================================================
echo                   LAUNCHER UNIFIE TESTS FUNREVIS V2
echo ============================================================================
echo.

REM Verification de Node.js
node --version >nul 2>&1
if %errorlevel% neq 0 (
    echo ERREUR: Node.js n'est pas installe ou non disponible
    echo    Veuillez installer Node.js depuis https://nodejs.org/
    pause
    exit /b 1
)

REM Changement vers le r√©pertoire racine v2
cd /d "%~dp0"

REM Param√®tre optionnel
set MODE=%1
if "%MODE%"=="" goto :MENU

REM Ex√©cution directe selon le param√®tre
if /i "%MODE%"=="auto" goto :AUTO_TESTS
if /i "%MODE%"=="dev" goto :DEV_TESTS  
if /i "%MODE%"=="all" goto :ALL_TESTS
if /i "%MODE%"=="help" goto :HELP

echo Parametre invalide: %MODE%
goto :HELP

:MENU
echo TYPES DE TESTS DISPONIBLES:
echo.
echo    1. Tests Automatises (test-reports/)
echo       - Validation systeme, CI/CD, rapports
echo       - 12 tests: Structure, Syntaxe, Donnees, Architecture, Performance, Integration
echo.
echo    2. Tests de Developpement (src/)  
echo       - Debug, developpement, tests visuels
echo       - 10 fichiers: debug, fractions, loading, cours, etc.
echo.
echo    3. Tous les Tests
echo       - Automatises + Guide developpement
echo.
echo    4. Aide
echo.
set /p choice="Votre choix (1-4): "

if "%choice%"=="1" goto :AUTO_TESTS
if "%choice%"=="2" goto :DEV_TESTS
if "%choice%"=="3" goto :ALL_TESTS
if "%choice%"=="4" goto :HELP
echo ‚ùå Choix invalide
goto :MENU

:AUTO_TESTS
echo.
echo ü§ñ LANCEMENT DES TESTS AUTOMATIS√âS
echo ============================================================================
cd test-reports
echo üìÇ R√©pertoire: test-reports/
echo üöÄ Commande: node run-tests-quick.js all
echo.
node run-tests-quick.js all
set AUTO_RESULT=%errorlevel%
cd ..
echo.
echo üìä Tests automatis√©s termin√©s (Code: %AUTO_RESULT%)
if "%MODE%"=="auto" (
    pause
    exit /b %AUTO_RESULT%
)
goto :END

:DEV_TESTS
echo.
echo üõ†Ô∏è TESTS DE D√âVELOPPEMENT DISPONIBLES
echo ============================================================================
echo üìÇ R√©pertoire: src/
echo üåê Serveur local requis: http://localhost:8080
echo.
echo üìã FICHIERS DE TESTS DISPONIBLES:
echo.
echo    üêõ DEBUG:
echo       ‚Ä¢ test-debug.html           - Debug g√©n√©ral du syst√®me
echo       ‚Ä¢ test-debug-forc√©.html     - Debug avec chargement forc√©
echo.
echo    ‚öôÔ∏è FONCTIONNELS:
echo       ‚Ä¢ test-fractions.html       - Test module fractions
echo       ‚Ä¢ test-loading.html         - Test chargement donn√©es
echo       ‚Ä¢ test-js-loading.html      - Test chargement JavaScript
echo       ‚Ä¢ test-direct-js.html       - Test direct modules JS
echo.
echo    üìö INTERFACE:
echo       ‚Ä¢ test-cours-simple.html    - Interface cours simplifi√©e
echo.
echo    üìç SP√âCIALIS√âS:
echo       ‚Ä¢ pages/mathematiques/6ieme/test-simple.html      - Test niveau 6√®me
echo       ‚Ä¢ pages/mathematiques/6ieme/test-diagnostique.html - Test diagnostique
echo.
echo üöÄ COMMENT UTILISER:
echo    1. D√©marrer serveur: python -m http.server 8080 (dans src/)
echo    2. Ouvrir: http://localhost:8080/[nom-du-test].html
echo    3. Tester visuellement dans le navigateur
echo.
echo üí° SERVEUR AUTO? (y/n)
set /p start_server="D√©marrer automatiquement le serveur local? "
if /i "%start_server%"=="y" (
    echo üöÄ D√©marrage du serveur sur http://localhost:8080
    echo üìÇ Racine: src/
    echo üîó Exemple: http://localhost:8080/test-debug.html
    echo.
    echo ‚ö†Ô∏è  Appuyez sur Ctrl+C pour arr√™ter le serveur
    cd src
    python -m http.server 8080
    cd ..
) else (
    echo üìñ Consultez src/TESTS-README.md pour plus de d√©tails
)
if "%MODE%"=="dev" (
    pause
    exit /b 0
)
goto :END

:ALL_TESTS
echo.
echo üöÄ LANCEMENT DE TOUS LES TESTS
echo ============================================================================
call :AUTO_TESTS
echo.
echo ‚è∏Ô∏è  Appuyez sur une touche pour continuer vers les tests de d√©veloppement...
pause > nul
call :DEV_TESTS
goto :END

:HELP
echo.
echo ‚ùì AIDE - LAUNCHER TESTS FUNREVIS V2
echo ============================================================================
echo.
echo üìñ USAGE:
echo    test-launcher.bat             - Menu interactif
echo    test-launcher.bat auto        - Tests automatis√©s uniquement
echo    test-launcher.bat dev         - Guide tests d√©veloppement
echo    test-launcher.bat all         - Tous les tests
echo    test-launcher.bat help        - Cette aide
echo.
echo ü§ñ TESTS AUTOMATIS√âS (test-reports/):
echo    ‚Ä¢ Validation syst√®me automatique
echo    ‚Ä¢ 6 cat√©gories: Structure, Syntaxe, Donn√©es, Architecture, Performance, Int√©gration  
echo    ‚Ä¢ Rapports JSON automatiques
echo    ‚Ä¢ Utilis√©s pour CI/CD et validation qualit√©
echo.
echo üõ†Ô∏è TESTS DE D√âVELOPPEMENT (src/):
echo    ‚Ä¢ Tests manuels dans le navigateur
echo    ‚Ä¢ Debug interactif et tests visuels
echo    ‚Ä¢ 10 fichiers pour diff√©rents besoins de d√©veloppement
echo    ‚Ä¢ Utilis√©s pendant le d√©veloppement
echo.
echo üìö DOCUMENTATION:
echo    ‚Ä¢ src/TESTS-README.md - Guide complet
echo    ‚Ä¢ test-reports/README.md - Tests automatis√©s
echo.
if "%MODE%"=="help" (
    pause
    exit /b 0
)
goto :MENU

:END
echo.
echo ‚úÖ LAUNCHER TERMIN√â
echo üìö Documentation: src/TESTS-README.md et test-reports/README.md
echo.
pause

endlocal

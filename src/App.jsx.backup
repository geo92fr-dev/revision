import { useState, useEffect } from 'react'
import TestComponent from './test'
import './App.css'

function App() {
  const [user, setUser] = useState(null)
  const [loading, setLoading] = useState(true)
  const [currentView, setCurrentView] = useState('home') // 'home', 'dashboard', 'revisions', 'quiz', 'cours'
  const [currentQuiz, setCurrentQuiz] = useState(null)
  const [currentCours, setCurrentCours] = useState(null)

  useEffect(() => {
    const unsubscribe = onAuthChange((user) => {
      setUser(user)
      setLoading(false)
      // Retourner à la page d'accueil quand l'utilisateur se déconnecte
      if (!user) {
        setCurrentView('home')
      }
    })

    return () => unsubscribe()
  }, [])

  const [currentQuizSubject, setCurrentQuizSubject] = useState('');
  const [currentQuizLevel, setCurrentQuizLevel] = useState('');
  const [currentCoursSubject, setCurrentCoursSubject] = useState('');
  const [currentCoursLevel, setCurrentCoursLevel] = useState('');

  const handleLogin = (user) => {
    setUser(user)
  }

  const handleLogout = () => {
    setUser(null)
    setCurrentView('home')
  }

  const handleShowDashboard = () => {
    setCurrentView('dashboard')
  }

  const handleShowRevisions = () => {
    setCurrentView('revisions')
  }

  const handleShowQuiz = (quizId, subject, level) => {
    setCurrentQuiz(quizId)
    setCurrentQuizSubject(subject)
    setCurrentQuizLevel(level)
    setCurrentView('quiz')
  }

  const handleShowCours = (coursId, subject, level) => {
    setCurrentCours(coursId)
    setCurrentCoursSubject(subject)
    setCurrentCoursLevel(level)
    setCurrentView('cours')
  }

  const handleBackToHome = () => {
    setCurrentView('home')
  }

  const handleBackToRevisions = () => {
    setCurrentView('revisions')
  }

  if (loading) {
    return (
      <div className="loading-container">
        <div className="loading-spinner"></div>
        <p>Chargement...</p>
      </div>
    )
  }

  return (
    <div className="app">
      {currentView === 'dashboard' ? (
        <Dashboard 
          user={user} 
          onLogout={handleLogout}
          onBackToHome={handleBackToHome}
        />
      ) : currentView === 'revisions' ? (
        <Revisions 
          onBack={handleBackToHome}
          onQuiz={handleShowQuiz}
          onCours={handleShowCours}
        />
      ) : currentView === 'quiz' ? (
        <Quiz 
          quizId={currentQuiz}
          subject={currentQuizSubject}
          level={currentQuizLevel}
          onBack={handleBackToRevisions}
        />
      ) : currentView === 'cours' ? (
        <CoursComponent 
          coursId={currentCours}
          subject={currentCoursSubject}
          level={currentCoursLevel}
          onBack={handleBackToRevisions}
          onQuiz={handleShowQuiz}
        />
      ) : (
        <HomePage 
          user={user}
          onLogin={handleLogin} 
          onLogout={handleLogout}
          onDashboard={handleShowDashboard}
          onRevisions={handleShowRevisions}
          onQuiz={handleShowQuiz}
        />
      )}
    </div>
  )
}

export default App
